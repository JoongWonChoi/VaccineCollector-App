<Android Activity 개요> 
Activity란 안드로이드 어플리케이션을 구성한느 기본 요소.
UI가 생성되는 틀을 제공, 기본적으로 화면에 나타남
Activity와 달리 화면에 나타나지는 않지만 어플리케이션 뒷 단에서 작업을 진행하는 Service가 존재.
어플리케이션은 Activity의 모음!
=============================================================
1. onCreate() : Activity가 생성, 화면 정의할 때 사용, 완료 시 onStart()호출
2. onStart() : Activity가 사용자에게 보여질 때 / 아직 사용자와 상호작용은 X
3. onResume() : 사용자와 상호작용 하는 단계, 주로 어플의 기능이 여기에 설정됨
4. onPause()
5. onStop()
6. onRestart()
7. onDestroy()
==============================================================

1. onCreate() 메소드로 Activity 생성
super.onCreate(savedInstanceState) // super class 호출
*이 때의 savedInstanceState 파라미터를 수신하며 이 파라미터는 Activity의 이전 상태를 저장하는 Bundle 객체.
*Activity가 처음 생성된 경우에 savedInstanceState==null
2. setContentView() 메소드로 생성한 Activity에 layout 설정
setContentView(R.layout.activity_main) => 사용자가 생성한 Resource들의 layout 디렉토리에 있는 'activity_main.xml' 레이아웃으로 설정.
3. onCreate() 메소드가 종료되는 직후 onStart()콜백 메소드가 호출
==================================================
<어떻게 R.layout.activity_main이라는 아이디(변수)가 xml 레이아웃 일을 가리킬 수 있을까?>
안드로이드에는 자동으로 리소스를 관리해주는 기능이 있다.
우리가 안드로이드에서 생성하는 모든 리소스에 자동으로 ID를 부여하고있는데, 그것이 바로 리소스 관리자인 "R.java" 이다.
그래서 이미지를 넣거나 레이아웃을 생성하거나 View에 아이디를 부여하거나 등등 모든 리소스 작업들이 "R" 클래스 내부에서 자동으로 진행됨.
따라서 리소스를 직접 가지고 올 필요가 없이 이 리소스 아이디로 간편하게 사용 가능.

레이아웃에 설정된 뷰들은 초기 설정만 정의해놓은 것일 뿐, 이벤트를 받거나 뷰에 변화를 줄 수 없음.
따라서 이벤트 처리를 위해서는 자바 소스코드에 변화를 줘야함
이렇게 레이아웃에 설정된 뷰들을 가져오는 메소드가 "findViewById"

xml(레이아웃)파일에서 버튼, inputtext 등의 아이디를 설정
그 후 findViewById(R.id."설정한id") 로 불러올 수 있음.

객체 생성, 캐스트연산??
(10/29)
<캐스트 연산이란?>
형변환이라고 볼 수 있음.
기본형의 캐스팅 - 보통  '데이터손실'을 막기 위해 동작.
참조형의 캐스팅 - 서로 관련이 있는 데이터끼리의 변환을 목표로 함
즉 레퍼런스 타입에서는 상속인 구현관계등에 있지 않은 전혀 다른 두 객체라면 캐스팅 불가. 	     	

<Intent란?>
안드로이드 어플은 여러 Activity의 모음이라고 하였다. 
이때 한 Activity의 view에 적절한 action을 취해 다른 Activity로 전환하게끔 해주는 기능이 intent!
--Activity간의 전환이 일어날 때 메시지나 정보를 전달해주는 매개체라고 볼 수 있음.
Intent 객체 선언 시 선언해줘야할 파라미터 : 현재 Activity, 전달받을 Activity
Intent intent = new Intent(현재Acitivy.this, 전달받을Activity.class)와 같은 형식
--putExtra("key",전달할 변수) => 데이터를 넘겨줄 함수. 넘겨줄 데이터의 이름(key)와 넘겨줄 데이터 기입
--startActivity(intent) : 전환받을 Activity로 전환!!! 그리고 현재 Activity를 종료하고 싶으면 finish()

<adroid bundle> : 여러가지 타입의 값을 저장하는 Map 클래스
아무거나 포장할 수 있는 상자, 이 포장 박스(bundle)을 이용하면 이리저리 통신 가능
Activity 간의 정보를 주고 받을 때 Bundle클래스를 사용하여 여러가지의 데이터를 전송

<AppCompatActivity> : 안드로이드의 하위버전을 지원하는 Activity 일종.

<wrap_content와 match_parent 차이>
wrap_content : 내부 내용물 크기에 맞춰 크기 자동 조절
match_parent : 부모의 크기에 맞춤 (if부모가 화면 전체 = 화면 전체 크기만큼 크기 고정")